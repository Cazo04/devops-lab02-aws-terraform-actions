name: "Terraform CI/CD"

on:
  pull_request:
    branches: [ main ]
    paths: [ 'devops-lab01-aws-terraform/**' ]
  push:
    branches: [ main ]
    paths: [ 'devops-lab01-aws-terraform/**' ]
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform operation"
        required: true
        default: "plan"
        type: choice
        options: [ plan, apply, destroy ]

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.8.3
  TF_WORKING_DIR: devops-lab01-aws-terraform
jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    concurrency:
      group: terraform-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      #──────────────────── Checkout Code ───────────────────────
      - name: Checkout repo (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      #──────────────────── Tạo AWS credentials file ────────────
      - name: Configure AWS credentials from secret file
        run: |
          mkdir -p ~/.aws
          echo "${{ secrets.AWS_CREDENTIALS }}" > ~/.aws/credentials
          chmod 600 ~/.aws/credentials

      #──────────────────── Setup Terraform ─────────────────────
      - name: Setup Terraform ${{ env.TF_VERSION }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      #──────────────────── Terraform Init ──────────────────────
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=devops-lab01-aws-terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      #──────────────────── Checkov Scan  ───────────────────────
      - name: Checkov security scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ env.TF_WORKING_DIR }}
          download_external_modules: true
          soft_fail: true
          quiet: true

      #──────────────────── Terraform Validate ──────────────────
      - name: Terraform Validate
        run: terraform validate -no-color

      #──────────────────── Terraform Plan ──────────────────────
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request' || github.event.inputs.action == 'plan'
        run: terraform plan -no-color -out=tfplan

      - name: Comment plan on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            **Terraform Plan**

            ```
            ${{ steps.plan.outputs.stdout }}
            ```

      #──────────────────── Terraform Apply ─────────────────────
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      #──────────────────── Terraform Destroy ───────────────────
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy' && github.ref == 'refs/heads/main'
        run: terraform destroy -auto-approve